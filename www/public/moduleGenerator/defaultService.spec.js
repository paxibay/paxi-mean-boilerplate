module.exports = function(moduleName) {
    var serviceSpecContent = "var module = angular.mock.module;\nvar inject = angular.mock.inject;\nvar _ = require('underscore');\nvar _$httpBackend, $rootScope, moduleNameService, _coreConfig, URL, URL2;\ndescribe('moduleNameService', function() {\n\n  // Set up the module\n  beforeEach(module('BrokerPortal'));\n\n  beforeEach(function() {\n    inject(function(moduleNameService, coreConfig, $httpBackend, $rootScope) {\n      _coreConfig = coreConfig;\n      moduleNameService = moduleNameService;\n      _$httpBackend = $httpBackend;\n\n      mockGet();\n      mockPost();\n    });\n    // });\n  });\n\n  afterEach (\n    inject(function(moduleNameService, $httpBackend) {\n        _$httpBackend.verifyNoOutstandingExpectation ();\n        _$httpBackend.verifyNoOutstandingRequest ();\n    }));\n\n\n  function mockGet(){\n     URL = _coreConfig.urlPath() + '/api/clients/' + _coreConfig.getClient() + '/moduleName/get';\n      // backend definition common for all tests\n      _$httpBackend.when('GET', URL)\n        .respond({\n          userId: 'userX'\n        }, {\n          'A-Token': 'xxx'\n        });\n  }\n\n  function mockPost(){\n     URL2 = _coreConfig.urlPath() + '/api/clients/' + _coreConfig.getClient() + '/moduleName/post';\n      _$httpBackend.when('POST', URL2)\n        .respond({\n          userId: 'userX'\n        }, {\n          'A-Token': 'xxx'\n        });\n  }\n\n  it('Should be able to get information', function() {\n    inject(function(moduleNameService, $httpBackend) {\n      $httpBackend.expectGET(URL);\n      moduleNameService.get();\n      $httpBackend.flush();\n    });\n  });\n\n  it('Should be able to post information', function() {    \n    inject(function(moduleNameService, $httpBackend) {\n      $httpBackend.expectPOST(URL2);\n      moduleNameService.set({data:'data'});\n      $httpBackend.flush();\n    });\n  });\n});"
    var formatedContent = serviceSpecContent.replace(/moduleName/g, moduleName)
    return  formatedContent;
  };